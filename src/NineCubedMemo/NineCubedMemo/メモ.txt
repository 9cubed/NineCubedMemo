
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

  独り言によるメモ帳作成講座

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

▼更新履歴

■ver1.0.6 (2018-05-15)
 1. オブジェクトをXMLに変換する SerializeUtilsクラスを追加しました。
 2. フォームを前回開いていた位置とサイズで表示するようにしました。
 3. 読み取り専用ファイルがあると、テスト実行後にTestResults配下のテストフォルダが残るため、
    TextFileTests.LoadTest() で読み取り専用を解除するようにしました。
 4. ポップアップメニュー(右クリックメニュー)により、切り取り、コピー、貼り付けが行えるようにしました。
 5. コマンドライン引数により最初に開くファイルを指定できるようにしました。
    指定方法
     1. EXEにファイルをドラッグ&ドロップ
     2. 送るメニューによりファイルを指定(送るフォルダにEXEを配置する必要がある。shell:sendto)
     3. ショートカットの引数により指定

■ver1.0.5 (2018-05-06)
 1. 単体テストの追加。
 2. TextFileクラスのLoad()の修正。
    文字コードの判別のため、最初にファイルを全て読み込んでバイト配列に入れ、
	そこから ReadLine() で1行ずつ読み込み、\n で Join して文字列にしていたが、
	ReadToEnd() で全て文字列に読み込んでから改行コードを \n に置換した方が速かったため、ReadToEnd() を使うようにした。
    また、文字コードと改行コードが指定されていない場合のみ、自動判別するようにした。
 3. メニューのファイルに、文字コードと改行コードを指定するメニューを追加。
 4. メニューのファイルに、文字コードを指定して開くメニューを追加。

■ver1.0.4 (2018-04-29)
 1. テキストファイルを表すTextFileクラスの追加。
    パスや読み込み専用のフラグを保持する。
    また、文字コード、改行コード(CRLF、CRのみ、LFのみ)を指定してファイルを保存できるようにした。
 2. TextFileクラスの追加に伴い、Formで保持していたパス、読み込み専用のフラグを TextFileクラスで保持するように修正。
    また、RichTextBoxのメソッドで行っていたファイルの入出力を、TextFileクラスで行うようにした。
 3. フォームのタイトルに、開いているファイルの文字コード、BOMの有無を表示するようにした。
 4. __クラスの追加。デバッグ用やよく使うメソッドを入れる予定。

■ver1.0.3 (2018-04-20)
 1. ツールバーに「新規作成」「開く」「上書き保存」を追加。
 2. フォームタイトルにパス、読み取り専用のマーク、編集ありのマークを表示するようにした。
 3. テキストボックスの左の内側の余白の再設定。テキストを全て削除すると、余白が消えるため。

■ver1.0.2 (2018-04-17)
 1. ソースの整理
 2. メッセージボックスで「キャンセル」が選択された時は、独自実装の CancelException をスローするようにした。
 3. 各メニューのクリックイベントを try ～ catch でエラーを吸収するようにした。

■ver1.0.1 (2018-04-07)
 1. メニューの「新規作成」「開く」「上書き保存」「名前を付けて保存」の実装。

■ver1.0.0 (2018/04/04)
 1. RichTextBox、メニュー、ツールバーの配置。
 2. RichTextBox の初期化

以上
